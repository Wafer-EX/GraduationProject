@page "/account"

@using CoderWebsite.Components
@using CoderWebsite.Components.Account
@using CoderWebsite.Models
@using Microsoft.AspNetCore.Identity

@inject UserManager<User> UserManager
@inject AuthenticationStateProvider AuthenticationState

<PageTitle>Личный кабинет | Кодер</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <PageBlock ColorFrom="black">
                <div class="account-container">
                    <span class="account-name-container">
                        <span class="account-fio">@($"{user.FirstName} {user.LastName} {user.MiddleName}")</span>
                        <span class="account-mail">@user.Email</span>
                    </span>
                    <span class="account-buttons-bar-container">
                        <button class="account-button @(GetStyle(OrderCategory.All))" @onclick="() => SelectCategory(OrderCategory.All)">все заказы</button>
                        <button class="account-button @(GetStyle(OrderCategory.InWork))" @onclick="() => SelectCategory(OrderCategory.InWork)">в работе</button>
                        <button class="account-button @(GetStyle(OrderCategory.Closed))" @onclick="() => SelectCategory(OrderCategory.Closed)">завершенные</button>
                    </span>

                    <div class="account-orders-container">
                        <Order Style="@($"animation-delay: .1s")" Name="Микросервис gRPC" Date="14.05.2020" Status="OrderStatus.TermsOfReferenceCompleted" />
                        <Order Style="@($"animation-delay: .2s")" Name="Мультимедийный сервис" Date="15.05.2020" Status="OrderStatus.InWork" />
                        <Order Style="@($"animation-delay: .3s")" Name="Микросервис ZeroC Ice" Date="11.05.2020" Status="OrderStatus.Completed" />
                    </div>
                </div>
            </PageBlock>
        </Authorized>
        <NotAuthorized>
            <p>Пожалуйста, войдите в систему</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private OrderCategory currentCategory = OrderCategory.All;

    private User user;

    protected override void OnInitialized()
    {
        var authState = AuthenticationState.GetAuthenticationStateAsync().Result;
        user = UserManager.GetUserAsync(authState.User).Result;
        base.OnInitialized();
    }

    private void SelectCategory(OrderCategory category) => currentCategory = category;

    private string GetStyle(OrderCategory category)
    {
        if (category == currentCategory)
            return "account-selected-button";
        else return "";
    }
}