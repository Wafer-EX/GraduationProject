@page "/admin/add-news"

@using CoderWebsite.Components
@using CoderWebsite.Models
@using CoderWebsite.Models.Pages.Admin
@using Microsoft.AspNetCore.Identity

@inject ApplicationContext DbContext
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Добавить новость | Кодер</PageTitle>

<PageBlock>
    <CascadingAuthenticationState>
        <AuthorizeView Roles="admin">
            <Authorized>
                <div class="add-news-container">
                    @if (EnableTitle)
                    {
                        <div class="add-news-title">Добавить новость</div>
                    }
                    <EditForm Model="@model" OnValidSubmit=Add Context="addNewsContext">
                        <div class="add-news-form-container">
                            <div class="add-news-validation-errors">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                            </div>

                            <span class="add-news-form-input-title">Заголовок новости</span>
                            <InputText @bind-Value="model.Title" class="add-news-form-input" />

                            <span class="add-news-form-input-title">Текст новости</span>
                            <InputTextArea class="add-news-form-inputtextarea" @bind-Value="model.Text" />

                            <div class="add-news-form-button-container">
                                <button type="submit" class="add-news-form-button">Добавить новость</button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="access-error-message">Только администратор имеет доступ к данному разделу.</div>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</PageBlock>

@code {
    private AddNewsModel model = new AddNewsModel();

    [Parameter] public bool EnableTitle { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authUser = authState.User;
        if (!authUser.Identity.IsAuthenticated) NavigationManager.NavigateTo("/login", true, true);
    }

    private void Add()
    {
        var newsModel = new News
        {
            Title = model.Title,
            Text = model.Text,
            Date = DateTime.Today.ToLongDateString()
        };
        DbContext.News.Add(newsModel);
        DbContext.SaveChanges();
        NavigationManager.NavigateTo($"/news/{newsModel.Id}", true, true);
    }
}