@page "/admin"

@using CoderWebsite.Components
@using CoderWebsite.Components.Admin.Panel
@using CoderWebsite.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IDbContextFactory<ApplicationContext> ContextFactory
@inject NavigationManager NavigationManager

<PageTitle>Панель администратора | Кодер</PageTitle>

<PageBlock>
    <CascadingAuthenticationState>
        <AuthorizeView Roles="admin">
            <Authorized>
                <div class="admin-panel-title-container">
                    <span class="admin-panel-title">Панель администратора</span>
                    <span class="admin-panel-title-mail">@user.Email</span>
                </div>
                <div class="admin-panel-tabs-container">
                    <button class="admin-panel-tab @(GetStyle(AdminPanelSelection.NewsControl))"
                        @onclick="() => ChangeSelection(AdminPanelSelection.NewsControl)">
                        Управление новостями
                    </button>
                    <button class="admin-panel-tab @(GetStyle(AdminPanelSelection.UserList))"
                        @onclick="() => ChangeSelection(AdminPanelSelection.UserList)">
                        Список пользователей
                    </button>
                    <button class="admin-panel-tab @(GetStyle(AdminPanelSelection.Feedback))"
                        @onclick="() => ChangeSelection(AdminPanelSelection.Feedback)">
                        Обратная связь
                    </button>
                </div>
                <div>
                    <div style="@(GetDisplay(AdminPanelSelection.NewsControl))">
                        <NewsManager />
                    </div>
                    <div style="@(GetDisplay(AdminPanelSelection.UserList))">
                        <UserControl />
                    </div>
                    <div style="@(GetDisplay(AdminPanelSelection.Feedback))">
                        <div>Обратная связь</div>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="access-error-message">Только администратор имеет доступ к данному разделу.</div>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</PageBlock>

@code {
    private AdminPanelSelection tabSelection = AdminPanelSelection.NewsControl;

    private User user;

    protected override async Task OnInitializedAsync()
    {
        using (var DbContext = ContextFactory.CreateDbContext())
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var authUser = authState.User;
            if (!authUser.Identity.IsAuthenticated) NavigationManager.NavigateTo("/login", true, true);
            user = DbContext.Users.Where(user => user.Email == authUser.Identity.Name).First();
        }
    }

    private void ChangeSelection(AdminPanelSelection selection)
    {
        tabSelection = selection;
        StateHasChanged();
    }

    private string GetStyle(AdminPanelSelection selection)
    {
        if (selection == tabSelection) return "admin-panel-tab-selected";
        else return "";
    }

    private string GetDisplay(AdminPanelSelection selection)
    {
        if (selection != tabSelection) return "display: none;";
        else return "";
    }

    private enum AdminPanelSelection
    {
        NewsControl,
        UserList,
        Feedback
    }
}