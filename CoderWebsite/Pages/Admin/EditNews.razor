@page "/admin/edit-news/{Id:int}"

@using CoderWebsite.Components
@using CoderWebsite.Models
@using CoderWebsite.Models.Pages.Admin

@inject ApplicationContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Изменить новость | Кодер</PageTitle>

<PageBlock>
    <div class="add-news-container">
        @if (EnableTitle)
        {
            <div class="add-news-title">Изменить новость</div>
        }
        <EditForm Model="@model" OnValidSubmit=Edit>
            <div class="add-news-form-container">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <span class="add-news-form-input-title">Заголовок новости</span>
                <InputText @bind-Value="model.Title" class="add-news-form-input" />

                <span class="add-news-form-input-title">Текст новости</span>
                <InputTextArea class="add-news-form-inputtextarea" @bind-Value="model.Text" />

                <div class="add-news-form-button-container">
                    <button type="submit" class="add-news-form-button">Изменить новость</button>
                </div>
            </div>
        </EditForm>
    </div>
</PageBlock>

@code {
    private News news;

    [Parameter]
    public bool EnableTitle { get; set; } = true;

    [Parameter]
    public int Id { get; set; }

    private AddNewsModel model = new AddNewsModel();

    protected override void OnInitialized()
    {
        news = DbContext.News.Where(obj => obj.Id == Id).First();
        model.Title = news.Title;
        model.Text = news.Text;
    }

    private void Edit()
    {
        news.Title = model.Title;
        news.Text = model.Text;
        DbContext.SaveChanges();
        NavigationManager.NavigateTo($"/news/{Id}", true, true);
    }
}