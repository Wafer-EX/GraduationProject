@page "/admin/edit-news/{Id:int}"

@using CoderWebsite.Components
@using CoderWebsite.Models
@using CoderWebsite.Models.Pages.Admin
@using Microsoft.AspNetCore.Identity

@inject ApplicationContext DbContext
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Изменить новость | Кодер</PageTitle>

<PageBlock>
    <CascadingAuthenticationState>
        <AuthorizeView Roles="admin">
            <Authorized>
                @if (news != null)
                {
                    <div class="edit-news-container">
                        @if (EnableTitle)
                        {
                            <div class="edit-news-title">Изменить новость</div>
                        }
                        <EditForm Model="@model" OnValidSubmit=Edit Context="editNewsContext">
                            <div class="edit-news-form-container">
                                <div class="edit-news-validation-errors">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />
                                </div>

                                <span class="edit-news-form-input-title">Заголовок новости</span>
                                <InputText @bind-Value="model.Title" class="edit-news-form-input" />

                                <span class="edit-news-form-input-title">Текст новости</span>
                                <InputTextArea class="edit-news-form-inputtextarea" @bind-Value="model.Text" />

                                <div class="edit-news-seo-title">Поисковая оптимизация (SEO)</div>
                                <span class="edit-news-form-input-title">Заголовок</span>
                                <InputText @bind-Value="model.SEOTitle" class="edit-news-form-input" />

                                <span class="edit-news-form-input-title">Описание</span>
                                <InputTextArea @bind-Value="model.SEODescription" class="edit-news-form-input edit-news-form-seo-desc"></InputTextArea>

                                <span class="edit-news-form-input-title">Ключевые слова</span>
                                <InputText @bind-Value="model.SEOKeywords" class="edit-news-form-input" />

                                <div class="edit-news-form-button-container">
                                    <button type="submit" class="edit-news-form-button">Изменить новость</button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                }
                else
                {
                    <div class="edit-news-no-news-message">Новость по данному адресу не найдена.</div>
                }
            </Authorized>
            <NotAuthorized>
                <div class="access-error-message">Только администратор имеет доступ к данному разделу.</div>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</PageBlock>

@code {
    private News news;

    [Parameter] public bool EnableTitle { get; set; } = true;

    [Parameter] public int Id { get; set; }

    private AddNewsModel model = new AddNewsModel();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authUser = authState.User;
        if (!authUser.Identity.IsAuthenticated) NavigationManager.NavigateTo("/login", true, true);

        var dbNews = DbContext.News.Where(obj => obj.Id == Id);
        if (dbNews.Count() != 0)
        {
            news = dbNews.First();
            model.Title = news.Title;
            model.Text = news.Text;
            model.SEOTitle = news.SEOTitle;
            model.SEODescription = news.SEODescription;
            model.SEOKeywords = news.SEOKeywords;
        }
    }

    private void Edit()
    {
        news.Title = model.Title;
        news.Text = model.Text;
        news.SEOTitle = model.SEOTitle;
        news.SEODescription = model.SEODescription;
        news.SEOKeywords = model.SEOKeywords;
        DbContext.SaveChanges();
        NavigationManager.NavigateTo($"/news/{Id}", true, true);
    }
}