@page "/news-list"

@using CoderWebsite.Components
@using CoderWebsite.Components.BlockContent.NewsList
@using CoderWebsite.Models

@inject ApplicationContext DbContext

<PageTitle>@(string.IsNullOrEmpty(metaTitle) ? "Новости | Кодер" : $"{metaTitle} | Кодер")</PageTitle>
<HeadContent>
    @if (!string.IsNullOrEmpty(metaDesc)) { <meta name="description" content="@metaDesc"> }
</HeadContent>

<PageBlock>
    <div class="news-list-container">
        <div class="news-list-title">Новости</div>
        <div class="news-list-elements-container">
            @if (allNews != null && allNews.Count > 0)
            {
                @for (int i = 0; i < allNews.Count; i++)
                {
                    <NewsListElement Style="@($"animation-delay: .{i}s")"
                        Id="@(allNews[i].Id)"
                        Date="@(allNews[i].Date)"
                        Title="@(allNews[i].Title)"
                        Text="@(allNews[i].Text)"/>
                }
            }
            else
            {
                <div class="news-list-no-news-text">На данный момент новостей нет.</div>
            }
        </div>
    </div>
</PageBlock>

@code {
    private List<News>? allNews;

    private string? metaTitle;

    private string? metaDesc;

    [Parameter] public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        allNews = DbContext.News.ToList();
        var elements = DbContext.MetaPageDescriptions.Where(meta => meta.PageName == "NewsPage");
        if (elements.Count() > 0)
        {
            metaTitle = elements.First().Title;
            metaDesc = elements.First().Description;
        }
    }
}