@page "/our-products"

@using CoderWebsite.Components
@using CoderWebsite.Components.Voting
@using CoderWebsite.Models

@inject ApplicationContext DbContext

<PageTitle>@(string.IsNullOrEmpty(metaTitle) ? "Наши продукты | Кодер" : $"{metaTitle} | Кодер")</PageTitle>
<HeadContent>
    @if (!string.IsNullOrEmpty(metaDesc)) { <meta name="description" content="@metaDesc"> }
</HeadContent>

<PageBlock>
    <div class="our-products-page-title">Наши продукты</div>
    <VotingControl />

    <div class="our-products-product-card" style="animation-delay: .1s;">
        <div class="our-products-product-text">
            <div class="our-products-product-text-title">Микросервис "Система аккаунтов"</div>
            <div class="our-products-product-text-desc">Данный микросервис, выполненный на основе ZeroC Ice, позволяет интегрировать 
                систему аккаунтов в любой проект, обеспечивая значительное быстродействие и безопасность.</div>
        </div>
        <img class="our-products-product-image" src="/images/product1.jpg" />
    </div>

    <div class="our-products-product-card" style="animation-delay: .2s;">
        <div class="our-products-product-text">
            <div class="our-products-product-text-title">Микросервис "Система кеширования"</div>
            <div class="our-products-product-text-desc">Данный микросервис, основанный на gRPC, позволяет внедрить кеширование в ваш проект 
            быстро и качественно.</div>
        </div>
        <img class="our-products-product-image" src="/images/product2.jpg" />
    </div>

    <div class="our-products-product-card" style="animation-delay: .3s;">
        <div class="our-products-product-text">
            <div class="our-products-product-text-title">Микросервис "Обработчик изображений"</div>
            <div class="our-products-product-text-desc">Данный микросервис отвечает за обработку изображений, применяя к ним различные фильтры.</div>
        </div>
        <img class="our-products-product-image" src="/images/product3.jpg" />
    </div>
</PageBlock>

@code {
    private string? metaTitle;

    private string? metaDesc;

    protected override async Task OnInitializedAsync()
    {
        var elements = DbContext.MetaPageDescriptions.Where(meta => meta.PageName == "OurProductsPage");
        if (elements.Count() > 0)
        {
            metaTitle = elements.First().Title;
            metaDesc = elements.First().Description;
        }
    }
}